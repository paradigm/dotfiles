#!/bin/sh
# Wrapper for gcalcli that outputs in time remaining today
# Also adds caching for faster responses

if [ -w "${XDG_RUNTIME_DIR}" ]; then
	cache="${XDG_RUNTIME_DIR}/gcaltoday-$(id -u)"
else
	cache="/tmp/.gcaltoday-$(id -u)"
fi

# gcalcli is slow, so cache its output and run off of the cache
# it shouldn't update overly often
cache_timeout_sec=900
if ! [ -e "${cache}" ] || [ "$(date +%s)" -gt "$(expr $(stat -c %Y "${cache}") + "${cache_timeout_sec}")" ]; then
	if ! gcalcli --nocolor agenda "$(date --iso)" "$(date --iso -dtomorrow)" > "${cache}"; then
		rm "${cache}"
	fi
fi

awk -v"now=$(date +"%H %M")" '
BEGIN {
	split(now, a)
	now_mins = a[1] * 60 + a[2]
}
/^No Events Found.../ {
	exit
}
/./{
	# clear date prefix - we already know this is for today
	if ($0 !~ "^ ") {
		$1=$2=$3=""
	}

	# split hours/minutes
	sub(/:/, " ")
	# handle am/pm
	if ($2 ~ /pm$/) {
		sub(/pm$/, "", $2)
		$1 = $1 + 12
	} else {
		sub(/am$/, "", $2)
	}

	task_mins = $1 * 60 + $2
	diff=int(task_mins - now_mins)
	hours=int(diff/60)
	minutes=diff - (hours * 60)

	if (diff >= 0) {
		$1=$2=""
		sub(/^ */, "")
		printf "%s ", $0
		if (hours > 0) {
			printf "%sh", hours
		}
		printf "%sm\n", minutes
	}
}
' "${cache}"
